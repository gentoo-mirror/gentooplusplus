# This file is deprecated as per GLEP 56 in favor of metadata.xml.
# Please add your descriptions to your package's metadata.xml ONLY.
# * generated automatically using pmaint *

dev-python/Kivy:buildozer - Cross-compile Kivy apps via dev-python/buildozer (recommended)
dev-python/Kivy:cython - Enable Kivy C extensions via dev-python/cython (recommended)
dev-python/Kivy:examples - Build and install example Kivy apps
dev-python/Kivy:gles2 - Enable GLES2 support
dev-python/Kivy:highlight - Enable syntax highlighting support via dev-python/pygments
dev-python/Kivy:imaging - Enable image manipulation support via dev-python/pillow (recommended)
dev-python/Kivy:pango - Enable support for x11-libs/pango
dev-python/Kivy:pygame - Enable SDL2 support via dev-python/pygame
dev-python/Kivy:pytest - Enable downstream "kivy.tests" Kivy app testing via dev-python/pytest
dev-python/Kivy:rst - Enable reStructuredText (reST) support via dev-python/docutils
dev-python/buildozer:android - Package for Android via dev-python/python-for-android (recommended)
dev-python/buildozer:ios - Package for iOS via dev-python/kivy-ios (currently broken)
sci-ml/kohyas-gui:desktop - Create a "desktop" file (browser launcher) and add an icon.
sci-ml/kohyas-gui:systemd - Create a systemd service "kohyas-gui.service"
sci-ml/ollama:cpuonly - If using systemd, adjust the systemd service parameters to ignore the GPU and use only CPU.
sci-ml/ollama:systemd - Create a systemd service "ollama.service"
sci-ml/sd-swarmui-web:amd - build for AMD GPU, ROCM-based
sci-ml/sd-swarmui-web:comfyui - build the built-in ComfyUI backend. If unselected, you will have to manually install backend later on.
sci-ml/sd-swarmui-web:cpu - build for CPU-generation only
sci-ml/sd-swarmui-web:desktop - Create a "desktop" file (browser launcher) and add an icon.
sci-ml/sd-swarmui-web:intel - build for Intel GPU (IPEX) Compatible Hardware ( https://docs.pytorch.org/docs/main/notes/get_start_xpu.html ): Intel® Arc A-Series Graphics (CodeName: Alchemist); Intel® Arc B-Series Graphics (CodeName: Battlemage); Intel® Core™ Ultra Processors with Intel® Arc™ Graphics (CodeName: Meteor Lake-H); Intel® Core™ Ultra Desktop Processors (Series 2) with Intel® Arc™ Graphics (CodeName: Lunar Lake); Intel® Core™ Ultra Mobile Processors (Series 2) with Intel® Arc™ Graphics (CodeName: Arrow Lake-H); Intel® Data Center GPU Max Series (CodeName: Ponte Vecchio)
sci-ml/sd-swarmui-web:ipex - build for Intel GPU (IPEX) Compatible Hardware: Intel® Arc™ A-Series Graphics (Intel® Arc™ A770 [Verified], Intel® Arc™ A750, Intel® Arc™ A580, Intel® Arc™ A770M, Intel® Arc™ A730M, Intel® Arc™ A550M); Intel® Arc™ B-Series Graphics (Intel® Arc™ B580 [Verified], Intel® Arc™ B570); Intel® Data Center GPU Max Series [Verified]; For GPUs newer than Intel® Core™ Ultra Processors with Intel® Arc™ Graphics (Meteor Lake) or Intel® Arc™ A-Series Graphics that aren't listed, please check the AOT documentation ( https://www.intel.com/content/www/us/en/docs/dpcpp-cpp-compiler/developer-guide-reference/2025-0/ahead-of-time-compilation.html ) to see if it is supported. If so, follow instructions in the source section above to compile from source.
sci-ml/sd-swarmui-web:nvidia - build for NVidia GPU, cuda-based
sci-ml/sd-swarmui-web:systemd - Create a systemd service "swarmui.service"
www-misc/funkwhale:apache - Create apache configuration.
www-misc/funkwhale:nginx - Create nginx configuration.
www-misc/funkwhale:python_single_target_python3_10 - Build for Python3.10
www-misc/funkwhale:python_single_target_python3_11 - Build for Python3.11
www-misc/funkwhale:python_single_target_python3_12 - Build for Python3.12
www-misc/funkwhale:python_single_target_python3_13 - Build for Python3.13
www-misc/funkwhale:systemd - Create systemd services "funkwhale-beat.service", "funkwhale-server.service","funkwhale-worker.service","funkwhale.target".
www-misc/open-webui:ollama - Install also Ollama to be used with this server.
www-misc/open-webui:systemd - Create a systemd service "swarmui.service"
